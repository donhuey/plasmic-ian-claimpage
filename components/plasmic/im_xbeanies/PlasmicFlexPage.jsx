// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8HMNFKnEv7gJ55SbTqvTiU
// Component: 0XcyjVyUyT
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic_im_xbeanies.module.css"; // plasmic-import: 8HMNFKnEv7gJ55SbTqvTiU/projectcss
import sty from "./PlasmicFlexPage.module.css"; // plasmic-import: 0XcyjVyUyT/css
import Line1Icon from "./icons/PlasmicIcon__Line1"; // plasmic-import: 6RdOQRrPg/icon

export const PlasmicFlexPage__VariantProps = new Array();

export const PlasmicFlexPage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicFlexPage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"flexPage"}
            data-plasmic-override={overrides.flexPage}
            className={classNames(projectcss.all, sty.flexPage)}
          >
            <div
              data-plasmic-name={"rectangle3"}
              data-plasmic-override={overrides.rectangle3}
              className={classNames(projectcss.all, sty.rectangle3)}
            >
              <div
                data-plasmic-name={"nfTmarkets"}
                data-plasmic-override={overrides.nfTmarkets}
                className={classNames(projectcss.all, sty.nfTmarkets)}
              >
                <div
                  data-plasmic-name={"image1"}
                  data-plasmic-override={overrides.image1}
                  className={classNames(projectcss.all, sty.image1)}
                />

                <div
                  data-plasmic-name={"image2"}
                  data-plasmic-override={overrides.image2}
                  className={classNames(projectcss.all, sty.image2)}
                />
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__iMvh
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 700 }}
                  >
                    {"View on Marketplaces"}
                  </span>
                </React.Fragment>
              </div>

              <div
                data-plasmic-name={"owner0XUid04D1968E100389"}
                data-plasmic-override={overrides.owner0XUid04D1968E100389}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.owner0XUid04D1968E100389
                )}
              >
                {
                  "\nOwner: \n0x.........................................\n\n\nUID: \n04:d1:96:8e:10:03:89\n\n\n"
                }
              </div>

              <div
                data-plasmic-name={"imnotartEthdenverBeanie"}
                data-plasmic-override={overrides.imnotartEthdenverBeanie}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.imnotartEthdenverBeanie
                )}
              >
                {"IMNOTART ETHDENVER BEANIE\n"}
              </div>

              <div
                data-plasmic-name={"rectangle5"}
                data-plasmic-override={overrides.rectangle5}
                className={classNames(projectcss.all, sty.rectangle5)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__tWnZn
                  )}
                >
                  {"IMAGE/VIDEO"}
                </div>
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zxkfV
                )}
              >
                {"Edition Size: 1/20"}
              </div>

              <div
                data-plasmic-name={"socials"}
                data-plasmic-override={overrides.socials}
                className={classNames(projectcss.all, sty.socials)}
              >
                <div
                  data-plasmic-name={"image4"}
                  data-plasmic-override={overrides.image4}
                  className={classNames(projectcss.all, sty.image4)}
                />

                <div
                  data-plasmic-name={"image5"}
                  data-plasmic-override={overrides.image5}
                  className={classNames(projectcss.all, sty.image5)}
                />

                <div
                  data-plasmic-name={"image6"}
                  data-plasmic-override={overrides.image6}
                  className={classNames(projectcss.all, sty.image6)}
                />
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rKHnc
                )}
              >
                {"FLEX ON YOUR FRIENDS"}
              </div>
            </div>

            <div
              data-plasmic-name={"imnotArt3"}
              data-plasmic-override={overrides.imnotArt3}
              className={classNames(projectcss.all, sty.imnotArt3)}
            />

            <Line1Icon
              data-plasmic-name={"svg"}
              data-plasmic-override={overrides.svg}
              className={classNames(projectcss.all, sty.svg)}
              role={"img"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__t0Foy
              )}
            >
              {"1010 N. Ashland, Chicago IL"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qgL2
              )}
            >
              {"Copyright Â© 2022 imnotArt, LLC. All Rights Reserved."}
            </div>

            <div
              data-plasmic-name={"imnotArt5"}
              data-plasmic-override={overrides.imnotArt5}
              className={classNames(projectcss.all, sty.imnotArt5)}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bkbKv
              )}
            >
              {"Verified"}
            </div>

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img___4DfQ)}
              displayHeight={"22px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"none"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"27px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/im_xbeanies/images/greencheckjpeg.jpeg",
                fullWidth: 360,
                fullHeight: 360,
                aspectRatio: undefined
              }}
            />

            <p.PlasmicImg
              alt={""}
              className={classNames(sty.img__qPHni)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"151px"}
              loading={"lazy"}
              src={{
                src: "/plasmic/im_xbeanies/images/ethDenverLogopng.png",
                fullWidth: 1008,
                fullHeight: 987,
                aspectRatio: undefined
              }}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "flexPage",
    "rectangle3",
    "nfTmarkets",
    "image1",
    "image2",
    "owner0XUid04D1968E100389",
    "imnotartEthdenverBeanie",
    "rectangle5",
    "socials",
    "image4",
    "image5",
    "image6",
    "imnotArt3",
    "svg",
    "imnotArt5"
  ],

  flexPage: [
    "flexPage",
    "rectangle3",
    "nfTmarkets",
    "image1",
    "image2",
    "owner0XUid04D1968E100389",
    "imnotartEthdenverBeanie",
    "rectangle5",
    "socials",
    "image4",
    "image5",
    "image6",
    "imnotArt3",
    "svg",
    "imnotArt5"
  ],

  rectangle3: [
    "rectangle3",
    "nfTmarkets",
    "image1",
    "image2",
    "owner0XUid04D1968E100389",
    "imnotartEthdenverBeanie",
    "rectangle5",
    "socials",
    "image4",
    "image5",
    "image6"
  ],

  nfTmarkets: ["nfTmarkets", "image1", "image2"],
  image1: ["image1"],
  image2: ["image2"],
  owner0XUid04D1968E100389: ["owner0XUid04D1968E100389"],
  imnotartEthdenverBeanie: ["imnotartEthdenverBeanie"],
  rectangle5: ["rectangle5"],
  socials: ["socials", "image4", "image5", "image6"],
  image4: ["image4"],
  image5: ["image5"],
  image6: ["image6"],
  imnotArt3: ["imnotArt3"],
  svg: ["svg"],
  imnotArt5: ["imnotArt5"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFlexPage__ArgProps,
          internalVariantPropNames: PlasmicFlexPage__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicFlexPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFlexPage";
  } else {
    func.displayName = `PlasmicFlexPage.${nodeName}`;
  }
  return func;
}

export const PlasmicFlexPage = Object.assign(
  // Top-level PlasmicFlexPage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    flexPage: makeNodeComponent("flexPage"),
    rectangle3: makeNodeComponent("rectangle3"),
    nfTmarkets: makeNodeComponent("nfTmarkets"),
    image1: makeNodeComponent("image1"),
    image2: makeNodeComponent("image2"),
    owner0XUid04D1968E100389: makeNodeComponent("owner0XUid04D1968E100389"),
    imnotartEthdenverBeanie: makeNodeComponent("imnotartEthdenverBeanie"),
    rectangle5: makeNodeComponent("rectangle5"),
    socials: makeNodeComponent("socials"),
    image4: makeNodeComponent("image4"),
    image5: makeNodeComponent("image5"),
    image6: makeNodeComponent("image6"),
    imnotArt3: makeNodeComponent("imnotArt3"),
    svg: makeNodeComponent("svg"),
    imnotArt5: makeNodeComponent("imnotArt5"),
    // Metadata about props expected for PlasmicFlexPage
    internalVariantProps: PlasmicFlexPage__VariantProps,
    internalArgProps: PlasmicFlexPage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFlexPage;
/* prettier-ignore-end */
